-
# Set some variables.
  set:
    NameReg: "0x72ba7d8e73fe8eb666ea66babc8116a41bfb10e2"
-
# Deploy contracts
  deploy:
    NameCoin:
      contract: namecoin.se
      retry: 15
      wait: True
-
  deploy:
    Subcurrency:
      contract: subcurrency.se
      gas: 100000
      endowment: 1000000000000000000
      retry: 30
      wait: True
-
# Make transactions, here we register the previously deployed
# 'Subcurrency' contract with the deployed NameCoin
  transact:
    RegisterSubToNameCoin:
      to: $NameCoin
      sig: register:[int256,int256]:int256
      data:
        - $Subcurrency
        - SubcurrencyName
      gas: 100000
      gas_price: 10000000000000
      value: 0
      retry: 30
      wait: True
-
  transact:
    TestEncoding:
      to: $NameReg
      sig: some_method:[int256,int256,int256]:int256
      data:
        - $Subcurrency
        - 42
        - "\x01\x00"
      gas: 100000
      gas_price: 10000000000000
      value: 0
      wait: False
-
# Contract calls with return values
  call:
    GetNameFromNameCoin:
      to: $NameCoin
      sig: get_name:[int256]:int256
      data:
        - $Subcurrency
-
# Another deploy
  deploy:
    extra:
      contract: short_namecoin.se
      retry: 10
      wait: True
-
# Deploy Solidity contract
  deploy:
    Wallet:
      contract: wallet.sol
      solidity:
        - multiowned
        - daylimit
        - multisig
        - Wallet
      gas: 2500000
      retry: 30
      wait: True
-
# Transact to deployed Solidity contract name
  transact:
    ToWallet:
      to: $Wallet
      sig: kill:[$Subcurrency]:int256
      retry: 15
      wait: True
